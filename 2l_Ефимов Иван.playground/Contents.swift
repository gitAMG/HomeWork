//: A UIKit based Playground for presenting user interface
  
import UIKit

//Задание №1 (Написать функцию, которая определяет, четное число или нет)

func evenNumber(value: Int) {
    if value % 2 == 0 {
        print("Число: \(value) четное")
    } else {
        print("Число: \(value) не четное")
    }
}
evenNumber(value: 88)

//Задание №2 (Написать функцию, которая определяет, делится ли число без остатка на 3)

func divisionCheck(value: Int) {
    if value % 3 == 0 {
        print("Число: \(value) делится на 3 без остатка")
    } else {
        print("Число: \(value) не делится на 3 без остатка")
    }
}
divisionCheck(value: 99)

//Задание №3 (Создать возрастающий массив из 100 чисел)

var array = [Int]()
array += 1...100

//Задание 4 (Удалить из массива все четные и все числа, которые делятся на 3)

func Even(number: Int) -> Bool {
    return number % 2 != 0
}
func divisionOnThree(number: Int) -> Bool {
    return number % 3 != 0
}
let temp1 = array.filter(Even)
let temp2 = temp1.filter(divisionOnThree)
array = temp2

print(array)

//Задание 5 (Написать функцию, которая добавляет в массив новое число Фибоначчи, и добавить при помощи нее 100 элементов)

func fibonacci(n: UInt64) -> UInt64 {
    var a:UInt64 = 0
    var b:UInt64 = 1

    for _ in 0..<n {
        let temp = a
        a = b
        b = temp + b
    }
    return a
}

var array3 = [UInt64]()

for i in 0..<92 {
   array3.append(fibonacci(n: UInt64(i)))
}
print(array3)

//P.S. заполнить массив из 100 чисел фибоначчи не представляется возможным, т.к. тип переменной UInt64 не позволяет хранить числа больше 20 знаков

//Задание 5 (Заполнить массив из 100 элементов различными простыми числами. Натуральное число, большее единицы, называется простым, если оно делится только на себя и на единицу. Для нахождения всех простых чисел не больше заданного числа n, следуя методу Эратосфена, нужно выполнить следующие шаги:
//a. Выписать подряд все целые числа от двух до n (2, 3, 4, ..., n).
//b. Пусть переменная p изначально равна двум — первому простому числу.
//c. Зачеркнуть в списке числа от 2p до n, считая шагами по p (это будут числа, кратные p: 2p, 3p, 4p, ...).
//d. Найти первое не зачёркнутое число в списке, большее, чем p, и присвоить значению переменной p это число.
//e. Повторять шаги c и d, пока возможно.

var array4 = [2,3,4,5,6,7,8,9,10]
var p: Int = array4.index(after: 1)







